// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "todoz": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/konchanSS/Todoz/design
// --out=$(GOPATH)/src/github.com/konchanSS/Todoz
// --version=v1.2.0-dirty

package client

import (
	"github.com/goadesign/goa"
	"net/http"
)

// Todos (default view)
//
// Identifier: application/todo.+json; view=default
type Todo struct {
	// body
	Body string `form:"body" json:"body" xml:"body"`
	// id
	ID int `form:"id" json:"id" xml:"id"`
	// is_finished
	IsFinished bool `form:"is_finished" json:"is_finished" xml:"is_finished"`
}

// Validate validates the Todo media type instance.
func (mt *Todo) Validate() (err error) {

	if mt.Body == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "body"))
	}

	return
}

// DecodeTodo decodes the Todo instance encoded in resp body.
func (c *Client) DecodeTodo(resp *http.Response) (*Todo, error) {
	var decoded Todo
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}
